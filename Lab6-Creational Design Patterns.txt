Singleton Design Pattern

Can be used to create the hospital Object corrsponding to the desktop application system.( Each hospital has a desktop application to maintain and monitor all carehouses and patients under it's management)
Used to update carehouses annd patients related attributes like patients count and carehouse list of the Hospital object. Here, the same hospital object needs to updated or modified pertaining to changes like addition or removal of carehouses or patients from the system.

Builder Design Pattern

1. Can be used to build the Medical Report step by step.
>In order to create a complete medical report,we use health details like pulse rate, blood oxygen level,blood sugar level, temperature , skin moisture recieved from the patient(via a database).
using the builder pattern , we can create medical reports with only selected dhealth details like temperature and pulse rate only. The same medical report could be updated with the other details later.

2. Can also be used to build the Caretaker,Patient and CareHouse object step by step with limited details at the initial state. ( But, during the registration of the Caretaker,Patient and CareHouse, we could collect all the data and create the objects without the builder apttern as well)

Factory Design Pattern

In Factory pattern, we create object without exposing the creation logic to the client and refer to newly created object using a common interface.

1. Used to create a hospital or carehouse objects without exposing the related classes and the logic to the client, we could get use of an interface or an abstract class 'institute' and a corresponding factory class could be created ,which would create the respective carehouse or hospital objects as per need.
(In a scenario, where branches of the hospital,carehouses and other medical homes using smart wheel chair are under the managment of the main hospital branch)















